@startuml
interface com.evan.seprojrearend.mapper.StudentMapper {
~ long countByExample(StudentExample)
~ int deleteByExample(StudentExample)
~ int deleteByPrimaryKey(StudentKey)
~ int insert(Student)
~ int insertSelective(Student)
~ List<Student> selectByExample(StudentExample)
~ Student selectByPrimaryKey(StudentKey)
~ int updateByExampleSelective(Student,StudentExample)
~ int updateByExample(Student,StudentExample)
~ int updateByPrimaryKeySelective(Student)
~ int updateByPrimaryKey(Student)
}
interface com.evan.seprojrearend.mapper.TeacherMapper {
~ long countByExample(TeacherExample)
~ int deleteByExample(TeacherExample)
~ int deleteByPrimaryKey(TeacherKey)
~ int insert(Teacher)
~ int insertSelective(Teacher)
~ List<Teacher> selectByExample(TeacherExample)
~ Teacher selectByPrimaryKey(TeacherKey)
~ int updateByExampleSelective(Teacher,TeacherExample)
~ int updateByExample(Teacher,TeacherExample)
~ int updateByPrimaryKeySelective(Teacher)
~ int updateByPrimaryKey(Teacher)
}
interface com.evan.seprojrearend.mapper.ExperimentMapper {
~ long countByExample(ExperimentExample)
~ int deleteByExample(ExperimentExample)
~ int deleteByPrimaryKey(ExperimentKey)
~ int insert(Experiment)
~ int insertSelective(Experiment)
~ List<Experiment> selectByExampleWithBLOBs(ExperimentExample)
~ List<Experiment> selectByExample(ExperimentExample)
~ Experiment selectByPrimaryKey(ExperimentKey)
~ int updateByExampleSelective(Experiment,ExperimentExample)
~ int updateByExampleWithBLOBs(Experiment,ExperimentExample)
~ int updateByExample(Experiment,ExperimentExample)
~ int updateByPrimaryKeySelective(Experiment)
~ int updateByPrimaryKeyWithBLOBs(Experiment)
~ int updateByPrimaryKey(Experiment)
}
interface com.evan.seprojrearend.mapper.SysSchoolMesMapper {
~ long countByExample(SysSchoolMesExample)
~ int deleteByExample(SysSchoolMesExample)
~ int deleteByPrimaryKey(SysSchoolMesKey)
~ int insert(SysSchoolMesKey)
~ int insertSelective(SysSchoolMesKey)
~ List<SysSchoolMesKey> selectByExample(SysSchoolMesExample)
~ int updateByExampleSelective(SysSchoolMesKey,SysSchoolMesExample)
~ int updateByExample(SysSchoolMesKey,SysSchoolMesExample)
}
interface com.evan.seprojrearend.mapper.AdministratorMapper {
~ long countByExample(AdministratorExample)
~ int deleteByExample(AdministratorExample)
~ int deleteByPrimaryKey(AdministratorKey)
~ int insert(Administrator)
~ int insertSelective(Administrator)
~ List<Administrator> selectByExample(AdministratorExample)
~ Administrator selectByPrimaryKey(AdministratorKey)
~ int updateByExampleSelective(Administrator,AdministratorExample)
~ int updateByExample(Administrator,AdministratorExample)
~ int updateByPrimaryKeySelective(Administrator)
~ int updateByPrimaryKey(Administrator)
}
interface com.evan.seprojrearend.mapper.SysUserMapper {
~ long countByExample(SysUserExample)
~ int deleteByExample(SysUserExample)
~ int deleteByPrimaryKey(String)
~ int insert(SysUser)
~ int insertSelective(SysUser)
~ List<SysUser> selectByExample(SysUserExample)
~ SysUser selectByPrimaryKey(String)
~ int updateByExampleSelective(SysUser,SysUserExample)
~ int updateByExample(SysUser,SysUserExample)
~ int updateByPrimaryKeySelective(SysUser)
~ int updateByPrimaryKey(SysUser)
}
interface com.evan.seprojrearend.mapper.SectionInfoMapper {
~ long countByExample(SectionInfoExample)
~ int deleteByExample(SectionInfoExample)
~ int deleteByPrimaryKey(SectionInfoKey)
~ int insert(SectionInfo)
~ int insertSelective(SectionInfo)
~ List<SectionInfo> selectByExample(SectionInfoExample)
~ SectionInfo selectByPrimaryKey(SectionInfoKey)
~ int updateByExampleSelective(SectionInfo,SectionInfoExample)
~ int updateByExample(SectionInfo,SectionInfoExample)
~ int updateByPrimaryKeySelective(SectionInfo)
~ int updateByPrimaryKey(SectionInfo)
}
interface com.evan.seprojrearend.mapper.CourSectionMapper {
~ long countByExample(CourSectionExample)
~ int deleteByExample(CourSectionExample)
~ int deleteByPrimaryKey(CourSectionKey)
~ int insert(CourSection)
~ int insertSelective(CourSection)
~ List<CourSection> selectByExampleWithBLOBs(CourSectionExample)
~ List<CourSection> selectByExample(CourSectionExample)
~ CourSection selectByPrimaryKey(CourSectionKey)
~ int updateByExampleSelective(CourSection,CourSectionExample)
~ int updateByExampleWithBLOBs(CourSection,CourSectionExample)
~ int updateByExample(CourSection,CourSectionExample)
~ int updateByPrimaryKeySelective(CourSection)
~ int updateByPrimaryKeyWithBLOBs(CourSection)
~ int updateByPrimaryKey(CourSection)
}
interface com.evan.seprojrearend.mapper.CourseMapper {
~ long countByExample(CourseExample)
~ int deleteByExample(CourseExample)
~ int deleteByPrimaryKey(CourseKey)
~ int insert(Course)
~ int insertSelective(Course)
~ List<Course> selectByExample(CourseExample)
~ Course selectByPrimaryKey(CourseKey)
~ int updateByExampleSelective(Course,CourseExample)
~ int updateByExample(Course,CourseExample)
~ int updateByPrimaryKeySelective(Course)
~ int updateByPrimaryKey(Course)
}
interface com.evan.seprojrearend.mapper.ReportsMapper {
~ long countByExample(ReportsExample)
~ int deleteByExample(ReportsExample)
~ int deleteByPrimaryKey(ReportsKey)
~ int insert(Reports)
~ int insertSelective(Reports)
~ List<Reports> selectByExample(ReportsExample)
~ Reports selectByPrimaryKey(ReportsKey)
~ int updateByExampleSelective(Reports,ReportsExample)
~ int updateByExample(Reports,ReportsExample)
~ int updateByPrimaryKeySelective(Reports)
~ int updateByPrimaryKey(Reports)
}
interface com.evan.seprojrearend.mapper.ScoreInfoMapper {
~ long countByExample(ScoreInfoExample)
~ int deleteByExample(ScoreInfoExample)
~ int deleteByPrimaryKey(ScoreInfoKey)
~ int insert(ScoreInfo)
~ int insertSelective(ScoreInfo)
~ List<ScoreInfo> selectByExample(ScoreInfoExample)
~ ScoreInfo selectByPrimaryKey(ScoreInfoKey)
~ int updateByExampleSelective(ScoreInfo,ScoreInfoExample)
~ int updateByExample(ScoreInfo,ScoreInfoExample)
~ int updateByPrimaryKeySelective(ScoreInfo)
~ int updateByPrimaryKey(ScoreInfo)
}
interface com.evan.seprojrearend.mapper.LiteratureMapper {
~ long countByExample(LiteratureExample)
~ int deleteByExample(LiteratureExample)
~ int deleteByPrimaryKey(LiteratureKey)
~ int insert(Literature)
~ int insertSelective(Literature)
~ List<Literature> selectByExample(LiteratureExample)
~ Literature selectByPrimaryKey(LiteratureKey)
~ int updateByExampleSelective(Literature,LiteratureExample)
~ int updateByExample(Literature,LiteratureExample)
~ int updateByPrimaryKeySelective(Literature)
~ int updateByPrimaryKey(Literature)
}
interface com.evan.seprojrearend.mapper.SectionMessageMapper {
~ long countByExample(SectionMessageExample)
~ int deleteByExample(SectionMessageExample)
~ int deleteByPrimaryKey(SectionMessageKey)
~ int insert(SectionMessageKey)
~ int insertSelective(SectionMessageKey)
~ List<SectionMessageKey> selectByExample(SectionMessageExample)
~ int updateByExampleSelective(SectionMessageKey,SectionMessageExample)
~ int updateByExample(SectionMessageKey,SectionMessageExample)
}
interface com.evan.seprojrearend.mapper.SchoolMapper {
~ long countByExample(SchoolExample)
~ int deleteByExample(SchoolExample)
~ int deleteByPrimaryKey(BigDecimal)
~ int insert(School)
~ int insertSelective(School)
~ List<School> selectByExample(SchoolExample)
~ School selectByPrimaryKey(BigDecimal)
~ int updateByExampleSelective(School,SchoolExample)
~ int updateByExample(School,SchoolExample)
~ int updateByPrimaryKeySelective(School)
~ int updateByPrimaryKey(School)
}
@enduml