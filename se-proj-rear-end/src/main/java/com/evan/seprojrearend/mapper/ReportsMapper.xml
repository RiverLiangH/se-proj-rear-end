<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.evan.seprojrearend.mapper.ReportsMapper">
  <resultMap id="BaseResultMap" type="com.evan.seprojrearend.po.Reports">
    <id column="EXPERIMENT_ID" jdbcType="DECIMAL" property="experimentId" />
    <id column="STUDENT_ID" jdbcType="DECIMAL" property="studentId" />
    <id column="SCHOOL_ID" jdbcType="DECIMAL" property="schoolId" />
    <result column="FIN_DATA" jdbcType="TIMESTAMP" property="finData" />
    <result column="MARK" jdbcType="DECIMAL" property="mark" />
    <result column="REPORT_ADDRESS" jdbcType="VARCHAR" property="reportAddress" />
    <result column="TEACHER_ID" jdbcType="DECIMAL" property="teacherId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    EXPERIMENT_ID, STUDENT_ID, SCHOOL_ID, FIN_DATA, MARK, REPORT_ADDRESS, TEACHER_ID
  </sql>
  <select id="selectByExample" parameterType="com.evan.seprojrearend.po.ReportsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from REPORTS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.evan.seprojrearend.po.ReportsKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from REPORTS
    where EXPERIMENT_ID = #{experimentId,jdbcType=DECIMAL}
      and STUDENT_ID = #{studentId,jdbcType=DECIMAL}
      and SCHOOL_ID = #{schoolId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.evan.seprojrearend.po.ReportsKey">
    delete from REPORTS
    where EXPERIMENT_ID = #{experimentId,jdbcType=DECIMAL}
      and STUDENT_ID = #{studentId,jdbcType=DECIMAL}
      and SCHOOL_ID = #{schoolId,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.evan.seprojrearend.po.ReportsExample">
    delete from REPORTS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.evan.seprojrearend.po.Reports">
    insert into REPORTS (EXPERIMENT_ID, STUDENT_ID, SCHOOL_ID, 
      FIN_DATA, MARK, REPORT_ADDRESS, 
      TEACHER_ID)
    values (#{experimentId,jdbcType=DECIMAL}, #{studentId,jdbcType=DECIMAL}, #{schoolId,jdbcType=DECIMAL}, 
      #{finData,jdbcType=TIMESTAMP}, #{mark,jdbcType=DECIMAL}, #{reportAddress,jdbcType=VARCHAR}, 
      #{teacherId,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.evan.seprojrearend.po.Reports">
    insert into REPORTS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="experimentId != null">
        EXPERIMENT_ID,
      </if>
      <if test="studentId != null">
        STUDENT_ID,
      </if>
      <if test="schoolId != null">
        SCHOOL_ID,
      </if>
      <if test="finData != null">
        FIN_DATA,
      </if>
      <if test="mark != null">
        MARK,
      </if>
      <if test="reportAddress != null">
        REPORT_ADDRESS,
      </if>
      <if test="teacherId != null">
        TEACHER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="experimentId != null">
        #{experimentId,jdbcType=DECIMAL},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=DECIMAL},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=DECIMAL},
      </if>
      <if test="finData != null">
        #{finData,jdbcType=TIMESTAMP},
      </if>
      <if test="mark != null">
        #{mark,jdbcType=DECIMAL},
      </if>
      <if test="reportAddress != null">
        #{reportAddress,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.evan.seprojrearend.po.ReportsExample" resultType="java.lang.Long">
    select count(*) from REPORTS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update REPORTS
    <set>
      <if test="record.experimentId != null">
        EXPERIMENT_ID = #{record.experimentId,jdbcType=DECIMAL},
      </if>
      <if test="record.studentId != null">
        STUDENT_ID = #{record.studentId,jdbcType=DECIMAL},
      </if>
      <if test="record.schoolId != null">
        SCHOOL_ID = #{record.schoolId,jdbcType=DECIMAL},
      </if>
      <if test="record.finData != null">
        FIN_DATA = #{record.finData,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mark != null">
        MARK = #{record.mark,jdbcType=DECIMAL},
      </if>
      <if test="record.reportAddress != null">
        REPORT_ADDRESS = #{record.reportAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null">
        TEACHER_ID = #{record.teacherId,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update REPORTS
    set EXPERIMENT_ID = #{record.experimentId,jdbcType=DECIMAL},
      STUDENT_ID = #{record.studentId,jdbcType=DECIMAL},
      SCHOOL_ID = #{record.schoolId,jdbcType=DECIMAL},
      FIN_DATA = #{record.finData,jdbcType=TIMESTAMP},
      MARK = #{record.mark,jdbcType=DECIMAL},
      REPORT_ADDRESS = #{record.reportAddress,jdbcType=VARCHAR},
      TEACHER_ID = #{record.teacherId,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.evan.seprojrearend.po.Reports">
    update REPORTS
    <set>
      <if test="finData != null">
        FIN_DATA = #{finData,jdbcType=TIMESTAMP},
      </if>
      <if test="mark != null">
        MARK = #{mark,jdbcType=DECIMAL},
      </if>
      <if test="reportAddress != null">
        REPORT_ADDRESS = #{reportAddress,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        TEACHER_ID = #{teacherId,jdbcType=DECIMAL},
      </if>
    </set>
    where EXPERIMENT_ID = #{experimentId,jdbcType=DECIMAL}
      and STUDENT_ID = #{studentId,jdbcType=DECIMAL}
      and SCHOOL_ID = #{schoolId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.evan.seprojrearend.po.Reports">
    update REPORTS
    set FIN_DATA = #{finData,jdbcType=TIMESTAMP},
      MARK = #{mark,jdbcType=DECIMAL},
      REPORT_ADDRESS = #{reportAddress,jdbcType=VARCHAR},
      TEACHER_ID = #{teacherId,jdbcType=DECIMAL}
    where EXPERIMENT_ID = #{experimentId,jdbcType=DECIMAL}
      and STUDENT_ID = #{studentId,jdbcType=DECIMAL}
      and SCHOOL_ID = #{schoolId,jdbcType=DECIMAL}
  </update>
</mapper>